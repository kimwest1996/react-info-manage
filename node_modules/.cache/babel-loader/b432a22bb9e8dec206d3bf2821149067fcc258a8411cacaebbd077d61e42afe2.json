{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chq\\\\work_03\\\\src\\\\components\\\\RegisterForm.js\";\nimport React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\n//onregester是什么\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  const onFinish = values => {\n    //箭头函数每一行都是返回值\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n    const userExists = users.find(user => user.username === values.username);\n    if (userExists) {\n      message.error('Username already exist!');\n      return;\n    }\n  };\n  const passwordRules = [{\n    required: true,\n    message: '请输入密码！'\n  }, {\n    min: 8,\n    message: '最少八位！'\n  }, {\n    max: 16,\n    message: '最多十六位'\n  }, {\n    pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,16}$/,\n    message: '密码必须包含大写字母，小写字母和数字'\n  }];\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"register\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your Username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 32\n        }, this),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Please input your Email!'\n      }, {\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 32\n        }, this),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      rules: passwordRules,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }, this),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"confirm\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your Password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n          return Promise.reject(new Error('The two passwords do not match!'));\n        }\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }, this),\n        placeholder: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        block: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n  //\n};\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","Form","Input","Button","message","UserOutlined","LockOutlined","MailOutlined","jsxDEV","_jsxDEV","RegisterForm","onFinish","values","users","JSON","parse","localStorage","getItem","userExists","find","user","username","error","passwordRules","required","min","max","pattern","name","initialValues","remember","children","Item","rules","prefix","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","Password","dependencies","hasFeedback","getFieldValue","validator","_","value","Promise","resolve","reject","Error","htmlType","block","_c","$RefreshReg$"],"sources":["C:/Users/chq/work_03/src/components/RegisterForm.js"],"sourcesContent":["import React from \"react\";\r\nimport {Form,Input,Button,message} from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\r\n//onregester是什么\r\nconst RegisterForm =()=>{\r\n    const onFinish=(values)=>{\r\n        //箭头函数每一行都是返回值\r\n        const users =JSON.parse(localStorage.getItem('users')) || [];\r\n        const userExists =users.find(user =>user.username ===values.username);\r\n        if (userExists){\r\n            message.error('Username already exist!');\r\n            return;\r\n        }\r\n    };\r\n\r\n    const passwordRules =[\r\n        {required :true,message:'请输入密码！'},\r\n        {min:8,message: '最少八位！'},\r\n        {max:16,message: '最多十六位'},\r\n        {\r\n            pattern:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,16}$/,\r\n            message: '密码必须包含大写字母，小写字母和数字',\r\n        },\r\n\r\n    ];\r\n\r\n    return(\r\n        <Form\r\n            name=\"register\"\r\n            initialValues={{remember:true}}\r\n            onFinish={onFinish}\r\n            >\r\n            <Form.Item\r\n                name=\"username\"\r\n                rules={[{required: true, message: 'Please input your Username!'}]}\r\n                >\r\n                <input prefix={<UserOutlined/>} placeholder=\"Username\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                    { required: true, message: 'Please input your Email!' },\r\n                    { type: 'email', message: 'The input is not valid E-mail!' },\r\n                ]}\r\n            >\r\n                <Input prefix={<MailOutlined />} placeholder=\"Email\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={passwordRules}\r\n            >\r\n                <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    { required: true, message: 'Please confirm your Password!' },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject(new Error('The two passwords do not match!'));\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password prefix={<LockOutlined />} placeholder=\"Confirm Password\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                    Register\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n    //\r\n\r\n\r\n};\r\n\r\nexport default RegisterForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}