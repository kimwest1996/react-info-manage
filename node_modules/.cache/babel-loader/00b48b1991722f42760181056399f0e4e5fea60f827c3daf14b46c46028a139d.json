{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chq\\\\work_03\\\\src\\\\components\\\\LoginForm.js\";\nimport React from 'react';\nimport { Form, Input, Button, Checkbox, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  const onFinish = values => {\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n    const user = users.find(user => user.username === values.username && user.password === values.password);\n    if (user) {\n      message.success('Login successful!');\n      console.log('Logged in with:', values);\n      localStorage.setItem('currentUser', JSON.stringify(user));\n    } else {\n      message.error('Invalid username or password!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"login\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your Username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 32\n        }, this),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 41\n        }, this),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      noStyle: true,\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        block: true,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","Form","Input","Button","Checkbox","message","UserOutlined","LockOutlined","jsxDEV","_jsxDEV","LoginForm","onFinish","values","users","JSON","parse","localStorage","getItem","user","find","username","password","success","console","log","setItem","stringify","error","name","initialValues","remember","children","Item","rules","required","prefix","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","Password","valuePropName","noStyle","type","htmlType","block","_c","$RefreshReg$"],"sources":["C:/Users/chq/work_03/src/components/LoginForm.js"],"sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, Checkbox, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nconst LoginForm = () => {\r\n    const onFinish = (values) => {\r\n        const users = JSON.parse(localStorage.getItem('users')) || [];\r\n        const user = users.find(user => user.username === values.username && user.password === values.password);\r\n\r\n        if (user) {\r\n            message.success('Login successful!');\r\n            console.log('Logged in with:', values);\r\n            localStorage.setItem('currentUser', JSON.stringify(user));\r\n        } else {\r\n            message.error('Invalid username or password!');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"login\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                rules={[{ required: true, message: 'Please input your Username!' }]}\r\n            >\r\n                <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[{ required: true, message: 'Please input your Password!' }]}\r\n            >\r\n                <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                    Log in\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}